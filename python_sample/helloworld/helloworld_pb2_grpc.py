# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from helloworld import helloworld_pb2 as helloworld_dot_helloworld__pb2


class FeederStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetNewFeed = channel.unary_stream(
        '/feed.Feeder/GetNewFeed',
        request_serializer=helloworld_dot_helloworld__pb2.Empty.SerializeToString,
        response_deserializer=helloworld_dot_helloworld__pb2.FeedResponse.FromString,
        )


class FeederServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetNewFeed(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FeederServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetNewFeed': grpc.unary_stream_rpc_method_handler(
          servicer.GetNewFeed,
          request_deserializer=helloworld_dot_helloworld__pb2.Empty.FromString,
          response_serializer=helloworld_dot_helloworld__pb2.FeedResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'feed.Feeder', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
